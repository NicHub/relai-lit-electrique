#!/usr/bin/env python
# -*- coding: utf-8 -*-

HELP = """
Convert an xls[x] bom to csv and text formats.

Accepts no arguments.
"""

import sys

# Get all of the tricky packages out of the way
try:
	from sh import rm
except:
	print("You need to install the sh module.")
	print("https://github.com/amoffat/sh")
	sys.exit(1)

try:
	from sh import unoconv
	import sh
except:
	print("You must have unoconv installed to convert the bom.")
	print("sudo apt-get install unoconv")
	sys.exit(1)

try:
	import dataprint
except:
	print("You need to install the dataprint module.")
	print("sudo pip install dataprint")
	sys.exit(1)

import csv as csvr
from glob import glob
import os
import itertools


# Display the help if any arguments are provided.
if len(sys.argv) > 1:
	print(HELP)
	sys.exit(0)

header = """\"# Bill of Materials\"
\"# Converted from {}\"
\"# Generated by bom_to_text.py\"
\"#\"
"""

boms = glob('*bom*xls*')

if len(boms) == 0:
	print("Could not find a bom to convert.")
	sys.exit(1)

for b in boms:
	# Get the root name
	base = os.path.splitext(b)[0]
	csv = '{}.csv'.format(base)
	txt = '{}.txt'.format(base)

	# Check if csv and txt versions already exist
	if os.path.exists(csv):
		# Open it and determine if we created it. If we did, then I'm sure it's
		# fine to overwrite it. Otherwise, we probably shouldn't just overwrite
		# other people's files.
		with open(csv, 'r') as f:
			for l in f:
				if 'Generated by bom_to_text.py' in l:
					break
			else:
				print('Found existing {} that this script didn\'t create. \
Don\'t want to just overwrite it. Please move it or remove it.'.format(csv))
				sys.exit(1)

	if os.path.exists(txt):
		with open(txt, 'r') as f:
			for l in f:
				if 'Generated by bom_to_text.py' in l:
					break
			else:
				print('Found existing {} that this script didn\'t create. \
Don\'t want to just overwrite it. Please move it or remove it.'.format(txt))
				sys.exit(1)

	# Convert the bom to csv
	bom_tries = 3
	while bom_tries > 0:
		try:
			unoconv('-f', 'csv', '-o', csv, b)
			break
		except sh.ErrorReturnCode:
			print('Unable to convert bom on this go. Will try again \
because that seems to fix it.')
		bom_tries -= 1
		if bom_tries == 0:
			# Failed to convert bom. Exclude it
			print('Converting bom to csv failed. Not much we can do now.')
			sys.exit(1)

	# Convert CSV to txt
	rows = []
	with open(csv,'rb') as f:
		csvreader = csvr.reader(f)
		for row in csvreader:
			rows.append(row)

	txt_contents = dataprint.to_string(data=rows, separator=' ')

	with open(txt, 'w') as f:
		f.write(header.replace('"', '').format(b))
		f.write(txt_contents)

	# Read in CSV
	csv_contents = ''
	with open(csv, 'r') as f:
		csv_contents = f.read()

	# Figure out how many columns there are
	with open(csv, 'r') as f:
		csvreader = csvr.reader(f)
		columns = len(next(csvreader))

	# Make header block comply with github by adding commas
	newheader = ""
	for line in header.split('\n')[0:-1]:
		newheader += line + ','*(columns-1) + '\n'

	# Write back CSV
	with open(csv, 'w') as f:
		# Add header to csv
		f.write(newheader.format(b))
		f.write(csv_contents)

